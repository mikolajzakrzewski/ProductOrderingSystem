// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int         @id @default(autoincrement()) 
  name        String 
  description String? 
  descriptionHTML String?
  unitPrice   Float 
  unitWeight  Float 
  categoryId  Int 
  category    Category    @relation(fields: [categoryId], references: [id]) 
  orderItems  OrderItem[] 
}

model Category {
  id       Int       @id @default(autoincrement()) 
  name     String    @unique 
  products Product[] 
}

model Order {
  id           Int         @id @default(autoincrement()) 
  approvalDate DateTime? 
  statusId     Int 
  status       OrderStatus @relation(fields: [statusId], references: [id]) 
  customerName String 
  email        String 
  phoneNumber  String 
  orderItems   OrderItem[] 
  Review       Review[]
}

model OrderStatus {
  id     Int     @id @default(autoincrement()) 
  name   String  @unique 
  orders Order[] 
}

model OrderItem {
  id        Int     @id @default(autoincrement()) 
  orderId   Int 
  order     Order   @relation(fields: [orderId], references: [id]) 
  productId Int 
  product   Product @relation(fields: [productId], references: [id]) 
  quantity  Int 
}

model Review {
  id      Int    @id @default(autoincrement()) 
  orderId Int 
  order   Order  @relation(fields: [orderId], references: [id]) 
  rating  Int 
  text    String 
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     String   @default("KLIENT") // Role: "KLIENT", "PRACOWNIK"
  createdAt DateTime @default(now())
}
